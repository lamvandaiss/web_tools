const <%= _.capitalize(_.camelCase(tableName)) %> = require('../models/<%= _.camelCase(tableName) %>');

// Lấy tất cả <%= _.capitalize(_.camelCase(tableName)) %>s
exports.getAll<%= _.capitalize(_.camelCase(tableName)) %>s = async (req, res) => {
  try {
    const data = await <%= _.capitalize(_.camelCase(tableName)) %>.find();
    res.status(200).json(data);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};

// Lấy <%= _.capitalize(_.camelCase(tableName)) %> theo ID
exports.get<%= _.capitalize(_.camelCase(tableName)) %>ById = async (req, res) => {
  try {
    const data = await <%= _.capitalize(_.camelCase(tableName)) %>.findById(req.params.id);
    if (!data) {
      return res.status(404).json({ message: '<%= _.capitalize(_.camelCase(tableName)) %> not found' });
    }
    res.status(200).json(data);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};

// Tạo mới <%= _.capitalize(_.camelCase(tableName)) %>
exports.create<%= _.capitalize(_.camelCase(tableName)) %> = async (req, res) => {
  const newData = new <%= _.capitalize(_.camelCase(tableName)) %>(req.body);
  try {
    const savedData = await newData.save();
    res.status(201).json(savedData);
  } catch (error) {
    res.status(400).json({ message: error.message });
  }
};

// Cập nhật <%= _.capitalize(_.camelCase(tableName)) %>
exports.update<%= _.capitalize(_.camelCase(tableName)) %> = async (req, res) => {
  try {
    const updatedData = await <%= _.capitalize(_.camelCase(tableName)) %>.findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true });
    if (!updatedData) {
      return res.status(404).json({ message: '<%= _.capitalize(_.camelCase(tableName)) %> not found' });
    }
    res.status(200).json(updatedData);
  } catch (error) {
    res.status(400).json({ message: error.message });
  }
};

// Xóa <%= _.capitalize(_.camelCase(tableName)) %>
exports.delete<%= _.capitalize(_.camelCase(tableName)) %> = async (req, res) => {
  try {
    const data = await <%= _.capitalize(_.camelCase(tableName)) %>.findByIdAndDelete(req.params.id);
    if (!data) {
      return res.status(404).json({ message: '<%= _.capitalize(_.camelCase(tableName)) %> not found' });
    }
    res.status(200).json({ message: '<%= _.capitalize(_.camelCase(tableName)) %> deleted successfully' });
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};